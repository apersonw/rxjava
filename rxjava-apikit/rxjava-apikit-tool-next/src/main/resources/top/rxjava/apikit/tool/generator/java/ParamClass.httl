<!--#set(ParamClassInfo classInfo)-->
<!--#set(PropertyInfo attr)-->
<!--#set(JavaParamClassWrapper wrapper)-->
<!--#set(ClassTypeInfo type)-->
package $!{wrapper.getFullDistPackage()};

import top.rxjava.apikit.client.EncodeObject;
import lombok.Getter;
import lombok.Setter;
import java.time.*;
import java.util.*;
import java.util.Map.Entry;
import java.util.AbstractMap.SimpleImmutableEntry;
import lombok.ToString;
import org.bson.types.ObjectId;
$!{wrapper.imports}

@Getter
@Setter
@ToString
public class $!{wrapper.getDistClassName()}$!{wrapper.typeParameters} $!{wrapper.superInfo} implements EncodeObject {
<!--#for(attr : classInfo.properties)-->
<!--#if(attr.javadocInfo)-->
	/**
$!{wrapper.formatComment(attr.javadocInfo,"	 * ")}
	 */
<!--#end-->
private $!{wrapper.toJavaTypeString(attr.classTypeInfo, false, true)} $!{attr.fieldName};
<!--#end-->

@Override
public List<Entry<String, Object>> encode(String $parent, List<Entry<String, Object>> $list) {
    $!{wrapper.encodeCode("        ", "$parent")}
}
}