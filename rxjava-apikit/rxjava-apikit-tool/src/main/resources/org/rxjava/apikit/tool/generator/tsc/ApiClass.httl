<!--#set(ApiClassInfo classInfo)-->
<!--#set(JavaScriptApiWrapper wrapper)-->
<!--#set(ClassTypeInfo type)-->
<!--#set(ApiMethodInfo method)-->
<!--#set(ApiInputClassInfo param)-->
$!{wrapper.imports}
<!--#for(method : classInfo.apiMethodList)-->
export interface $!{method.methodCaseName}Params {
    <!--#for(param : method.params)-->
        $!{param.fieldName}<!--#if(!param.isRequired())-->?<!--#end-->:$!{wrapper.paramType(param)}<!--#if(!for.last)-->,
        <!--#end-->
    <!--#end-->

}

<!--#end-->
/**
$!{wrapper.comment(" * ")}
*/
class $!{wrapper.getDistClassName()} extends AbstractApi {
##异步方法
<!--#for(method : classInfo.apiMethodList)-->
   /**
$!{wrapper.formatBaseComment(method.javaDocInfo,"     * ")}
     *
$!{wrapper.requestComment(method,"     * ")}
    */
    $!{method.methodName} = ({$!{wrapper.params(method,true)}}:$!{method.methodCaseName}Params):Promise<$!{wrapper.resultTypeString(method)}> => {
        return super._request(
            '$!{wrapper.serviceId}',
            '$!{method.type.name()}',
            'url',
            'pathVars',
            'formVars'
        )
    };
<!--#end-->
##循环结束
}

const $!{wrapper.fieldName} = new $!{wrapper.getDistClassName()}();
export default $!{wrapper.fieldName};